spring.application.name=cinema-ebkg-system

# Database Configuration - Neon PostgreSQL
spring.datasource.url=jdbc:postgresql://ep-curly-paper-a8l0pvuw-pooler.eastus2.azure.neon.tech/neondb?user=neondb_owner&password=npg_a5O0zTSCeAVF&sslmode=require&channelBinding=require
spring.datasource.driverClassName=org.postgresql.Driver
spring.datasource.username=neondb_owner
spring.datasource.password=npg_a5O0zTSCeAVF

# JWT Configuration
jwt.secret=${JWT_SECRET:Na04FW7TJzOq9rAnDFHGQeR78rhMBGuiatUoI+00lRc=}
jwt.access-token-expiration=${JWT_ACCESS_TOKEN_EXPIRATION:1800000}
jwt.refresh-token-expiration=${JWT_REFRESH_TOKEN_EXPIRATION:1209600000}

# JPA/Hibernate Configuration
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# validate ensures DB matches entity definitions
# create-drop creates the DB and drops it when the app is stopped (DESTROYS DATA!)
# update updates the DB schema based on entity changes
spring.jpa.hibernate.ddl-auto=update
spring.jpa.hibernate.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

# Springboot Server Configuration
server.port=8080

# CORS is configured via CorsConfig.java
