#!/bin/bash

#----- IMPORTANT -----
# 1 - Duplicate this example script and remove '.example/ from file name.
# 2 - Replace the Configuration Placeholders with actual values (provided by me (Team Lead) and/or neon db website)
# Might need to set execution perms before running script:
#   chmod +x setup_env.sh
# To run, from root:
#   source set_env.sh
#----- IMPORTANT -----

# Neon PostgreSQL Database Configuration
# DB_URL is jdbc url for java backend to use
DB_URL='url'
# PG_DATABASE_URL is postgresql url for command-line tools like pg_dump and pg_restore
PG_URL='url'
# Note: keep DB_URL and PG_URL in single quotes
DB_USERNAME=
DB_PASSWORD=

# JWT Configuration for authentication
JWT_SECRET=
# JWT Access Expiration: 30 minutes
JWT_ACCESS_TOKEN_EXPIRATION=1800000
# JWT Refresh Expiration: 14 days
JWT_REFRESH_TOKEN_EXPIRATION=1209600000

# Email Configuration (Gmail SMTP)
MAIL_HOST=smtp.gmail.com
MAIL_PORT=587
MAIL_USERNAME=
MAIL_PASSWORD=

# Frontend API Configuration
NEXT_PUBLIC_API_URL=http://localhost:8080

# Check and save operating system (Darwin (Mac) or Linux or NT... (New Technology Windows))
OS=$(uname -s)

if [[ "$OS" == "Linux" ]] || [[ "$OS" == "Darwin" ]]; then
    echo "Detected macOS/Linux. Using 'export'..."
    export DATABASE_URL="$DB_URL"
    export PG_DATABASE_URL="$PG_URL"
    export DATABASE_USERNAME="$DB_USERNAME"
    export DATABASE_PASSWORD="$DB_PASSWORD"
    export JWT_SECRET="$JWT_SECRET"
    export JWT_ACCESS_TOKEN_EXPIRATION="$JWT_ACCESS_TOKEN_EXPIRATION"
    export JWT_REFRESH_TOKEN_EXPIRATION="$JWT_REFRESH_TOKEN_EXPIRATION"
    export MAIL_HOST="$MAIL_HOST"
    export MAIL_PORT="$MAIL_PORT"
    export MAIL_USERNAME="$MAIL_USERNAME"
    export MAIL_PASSWORD="$MAIL_PASSWORD"
    
    echo "DATABASE_URL is: $DB_URL"
    echo "PG_DATABASE_URL is: $PG_URL"
    echo "DATABASE_USERNAME is: $DB_USERNAME"
    echo "DATABASE_PASSWORD is: $DB_PASSWORD"
    echo "JWT_SECRET is: $JWT_SECRET"
    echo "JWT_ACCESS_TOKEN_EXPIRATION is: 1800000"
    echo "JWT_REFRESH_TOKEN_EXPIRATION is: 1209600000"
    echo "MAIL_HOST is: $MAIL_HOST"
    echo "MAIL_PORT is: $MAIL_PORT"
    echo "MAIL_USERNAME is: $MAIL_USERNAME"
    echo "MAIL_PASSWORD is: $MAIL_PASSWORD"
    
elif [[ "$OS" == *'NT'* ]]; then
    echo "Detected Windows (Git Bash). Using 'export'..."
    export DATABASE_URL="$DB_URL"
    export PG_DATABASE_URL="$PG_URL"
    export DATABASE_USERNAME="$DB_USERNAME"
    export DATABASE_PASSWORD="$DB_PASSWORD"
    export JWT_SECRET="$JWT_SECRET"
    export JWT_ACCESS_TOKEN_EXPIRATION="$JWT_ACCESS_TOKEN_EXPIRATION"
    export JWT_REFRESH_TOKEN_EXPIRATION="$JWT_REFRESH_TOKEN_EXPIRATION"
    export MAIL_HOST="$MAIL_HOST"
    export MAIL_PORT="$MAIL_PORT"
    export MAIL_USERNAME="$MAIL_USERNAME"
    export MAIL_PASSWORD="$MAIL_PASSWORD"
    
    echo "DATABASE_URL is: $DATABASE_URL"
    echo "PG_DATABASE_URL is: $PG_DATABASE_URL"
    echo "DATABASE_USERNAME is: $DATABASE_USERNAME"
    echo "DATABASE_PASSWORD is: $DATABASE_PASSWORD"
    echo "JWT_SECRET is: $JWT_SECRET"
    echo "JWT_ACCESS_TOKEN_EXPIRATION is: 1800000"
    echo "JWT_REFRESH_TOKEN_EXPIRATION is: 1209600000"
    echo "MAIL_HOST is: $MAIL_HOST"
    echo "MAIL_PORT is: $MAIL_PORT"
    echo "MAIL_USERNAME is: $MAIL_USERNAME"
    echo "MAIL_PASSWORD is: $MAIL_PASSWORD"

else
    echo "IDK what wonky system this is... please set variables manually."
    echo "For Windows Command Prompt, use: set DATABASE_URL=... and set PG_DATABASE_URL=..."
    echo "For Mac/Linux, use: export DATABASE_URL=..."
fi